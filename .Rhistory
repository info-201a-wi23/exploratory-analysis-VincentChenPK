bool_vec
sum(bool_vec)
str_sub(attendees, start = -3)
unique(str_sub(attendees, start = -3))
length(unique(str_sub(attendees, start = -3)))
attendees <- c("Rachel SR", "Prof. Walsh, PhD", "Vera FR", "Prof. Hendry, PhD", "Lily JR", "Najma SR", "Prof. Baeten MD", "Prof. Chu, MD", "Li FR")
# How many people attended this campus event? Find out by using a built-in R function
length(attendees)
# Extract the third value in the vector attendees
attendees[3]
bool_vec <- str_detect(attendees, "Prof")
bool_vec
# Now, use a built-in R function to count how many professors were at the event (i.e., how many TRUE values are in the Boolean vector)
sum(bool_vec)
attendees <- c("Rachel SR", "Prof. Walsh, PhD", "Vera FR", "Prof. Hendry, PhD", "Lily JR", "Najma SR", "Prof. Baeten MD", "Prof. Chu, MD", "Li FR")
length(attendees)
attendees[3]
bool_vec <- str_detect(attendees, "Prof")
bool_vec
sum(bool_vec)
str_sub(attendees, start = -3)
unique(str_sub(attendees, start = -3))
length(unique(str_sub(attendees, start = -3)))
parks <- c("North Cascades", "Olympic", "Rainier")
visits <- c(30885, 234234,2423432)
np_data <- data.frame(parks, visits)
np_data
read.csv(https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/2020-National-Park-Visits-By-State.csv, stringsAsFactors = FALSE)
read.csv(https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/2020-National-Park-Visits-By-State.csv, stringsAsFactors = FALSE)
read.csv(https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/2020-National-Park-Visits-By-State.csv, stringsAsFactors = FALSE)
read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/2020-National-Park-Visits-By-State.csv", stringsAsFactors = FALSE)
np_data <- read.csv("https://raw.githubusercontent.com/melaniewalsh/Neat-Datasets/main/2020-National-Park-Visits-By-State.csv", stringsAsFactors = FALSE)
View(np_data)
nrow(np_data)
ncolumn(np_data)
ncol(np_data)
np_data$ParkName
student1_grades <- c(3.6,3.6,3.6)
# Student 2
# Grades: Class 1 — 2.9, Class 2 — 4.0, Overall GPA — 3.5
# Make a vector of these 3 grades and assign it the variable below
student2_grades <- c(2.9,4.0,3.5)
# Student 3
# Grades: Class 1 — 3.9, Class 2 — 3.1, Overall GPA — 3.4
# Make a vector of these 3 grades and assign it the variable below
student3_grades <- c(3.9,3.1,3.4)
analyze_applicant1 <- function(grades) {
class1 <-  grades[1]# Index the first item in the grades vector
class2 <-  grades[2]# Index the second item in the grades vector
overall_gpa <- grades[3]# Index the third item in the grades vector
# Add an if / else conditional here
if (mean(grades) > 3.5 & grades[3] > 3.5) {
print("The applicant should move on to the interview stage.")
}
else {
print("The applicant should be rejected.")
}
}
analyze_applicant1(student1_grades)
analyze_applicant1(student2_grades)
analyze_applicant2 <- function(grades) {
class1 <- grades[1] # Index the first item in the grades vector
class2 <- grades[2] # Index the second item in the grades vector
overall_gpa <- grades[3] # Index the third item in the grades vector
# Add an if / else conditional here
if(grades[1] < 3.0 | grades[2] < 3.0 | grades[3] < 3.0){
print("The applicant should be rejected.")
}else{
print("The applicant should move on to the interview stage")
}
}
analyze_applicant2(student3_grades)
analyze_applicant2(student2_grades)
analyze_applicant3 <- function(grades) {
class1 <- grades[1]# Index the first item in the grades vector
class2 <- grades[2] # Index the second item in the grades vector
overall_gpa <- grades[3]# Index the third item in the grades vector
# Add an if / else conditional here
if(grades[1] == 4.0 | grades[2] == 4.0 | grades[3] == 4.0){
print("The applicant should move on to the interview stage")
}else{
print("need more information")
}
}
analyze_applicant3(student3_grades)
analyze_applicant3(student2_grades)
gym_data <- load.csv("Desktop/Info-201/Git-repos/data.csv", stringAsFactors = FALSE)
gym_data <- read.csv("Desktop/Info-201/Git-repos/data.csv", stringAsFactors = FALSE)
gym_data <- read.csv("Desktop/Info-201/Git-repos/data.csv")
View(gym_data)
gym_data <- read.csv("Desktop/Info-201/Git-repos/data.csv")
library(dplyer)
library("dplyier")
library(dplyr)
library(ggplot2)
df <- data.frame(
label = c("A", "B", "C", "D"),
value = 1:4,
stringsAsFactors = F
)
ggplot(df) +
geom_col(mapping = aes(x = label, y = value, fill = "blue"))
ggplot(data = companies_per_country, aes(x = country_code, y = n)) +
geom_bar(
stat = 'identity',
fill = '#f68060',
) +
labs(
title = 'Number of Companies per Country (log plot)',
x = '',
y = 'log(Number of Companies)'
) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
coord_flip() +
theme_bw()
library(dplyr)
library(ggplot2)
library(maps)
library(scales)
airports <- read.csv("airports.csv")
setwd("~/Desktop/Info-201/archive (1)")
library(dplyr)
library(ggplot2)
library(maps)
library(scales)
airports <- read.csv("airports.csv")
companies1 <- read.csv("companies_1m.csv")
companies2 <- read.csv("companies_design.csv")
offices1 <- read.csv('offices.csv')
offices2 <- read.csv('offices5_score.csv')
topoffices <- read.csv('topoffices2_score.csv')
companies_per_country <- companies1 %>% group_by(country_code) %>%
tally()
ggplot(data = companies_per_country, aes(x = country_code, y = n)) +
geom_bar(
stat = 'identity',
fill = '#f68060',
) +
labs(
title = 'Number of Companies per Country (log plot)',
x = '',
y = 'log(Number of Companies)'
) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
coord_flip() +
theme_bw()
companies_per_country <- companies1 %>% group_by(country_code) %>%
tally(unique(name))
companies_per_country <- companies1 %>% group_by(country_code) %>%
tally(unique(name))
companies_per_country <- companies1 %>% group_by(country_code) %>%
tally()
ggplot(data = companies_per_country, aes(x = country_code, y = n)) +
geom_bar(
stat = 'identity',
fill = '#f68060',
) +
labs(
title = 'Number of Companies per Country (log plot)',
x = '',
y = 'log(Number of Companies)'
) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
coord_flip() +
theme_bw()
company_offices_per_country <- companies1 %>% group_by(country_code) %>%
tally()
ggplot(data = company_offices_per_country, aes(x = country_code, y = n)) +
geom_bar(
stat = 'identity',
fill = '#f68060',
) +
labs(
title = 'Number of Company Offices per Country (log plot)',
x = '',
y = 'log(Number of Company Offices)'
) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
coord_flip() +
theme_bw()
View(airports)
lol <- companies1 %>% mutate(country_code, city)
View(lol)
lol <- companies1 %>% select(country_code, city)
View(lol)
library(dplyr)
library(ggplot2)
library(maps)
library(scales)
# Load in Data sets
airports <- read.csv("airports.csv")
companies1 <- read.csv("companies_1m.csv")
companies2 <- read.csv("companies_design.csv")
offices1 <- read.csv('offices.csv')
offices2 <- read.csv('offices5_score.csv')
topoffices <- read.csv('topoffices2_score.csv')
company_offices_per_country <- companies1 %>% group_by(country_code) %>%
tally()
ggplot(data = company_offices_per_country, aes(x = country_code, y = n)) +
geom_bar(
stat = 'identity',
fill = '#f68060',
) +
labs(
title = 'Number of Company Offices per Country (log plot)',
x = '',
y = 'log(Number of Company Offices)'
) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
coord_flip() +
theme_bw()
company_offices_per_country <- companies1 %>% group_by(country_code) %>%
tally() %>%
unique()
company_offices_per_country <- companies1 %>% group_by(country_code) %>%
tally() %>%
unique()
ggplot(data = company_offices_per_country, aes(x = country_code, y = n)) +
geom_bar(
stat = 'identity',
fill = '#f68060',
) +
labs(
title = 'Number of Company Offices per Country (log plot)',
x = '',
y = 'log(Number of Company Offices)'
) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
coord_flip() +
theme_bw()
setwd("~/Desktop/Info-201/Git-repos/final-project-proposal-Jeremywuwuwu")
# Load in Packages
library(dplyr)
library(ggplot2)
library(maps)
library(scales)
# Load in Data sets
airports <- read.csv("airports.csv")
companies1 <- read.csv("companies_1m.csv")
companies2 <- read.csv("companies_design.csv")
offices1 <- read.csv('offices.csv')
offices2 <- read.csv('offices5_score.csv')
topoffices <- read.csv('topoffices2_score.csv')
# grouping by country and seeing how many company offices are in each country
company_offices_per_country <- companies1 %>%
group_by(country_code) %>%
tally() %>%
unique()
# Plotting countries on y axis for cleanliness
# comparing Log(number of offices) because comparing just normal offices makes the graph
# very unclear and has the US far above the rest, this graph shows perspective
ggplot(data = company_offices_per_country, aes(x = country_code, y = n)) +
geom_bar(
stat = 'identity',
fill = '#f68060',
) +
labs(
title = 'Number of Company Offices per Country (log plot)',
x = '',
y = 'log(Number of Company Offices)'
) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
coord_flip() +
theme_bw()
# Load in Packages
library(dplyr)
library(ggplot2)
library(maps)
library(scales)
# Load in Data sets
airports <- read.csv("airports.csv")
companies1 <- read.csv("companies_1m.csv")
companies2 <- read.csv("companies_design.csv")
offices1 <- read.csv('offices.csv')
offices2 <- read.csv('offices5_score.csv')
topoffices <- read.csv('topoffices2_score.csv')
# grouping by country and seeing how many company offices are in each country
company_offices_per_country <- companies1 %>%
group_by(country_code) %>%
tally() %>%
# unique()
# Plotting countries on y axis for cleanliness
# comparing Log(number of offices) because comparing just normal offices makes the graph
# very unclear and has the US far above the rest, this graph shows perspective
ggplot(data = company_offices_per_country, aes(x = country_code, y = n)) +
geom_bar(
stat = 'identity',
fill = '#f68060',
) +
labs(
title = 'Number of Company Offices per Country (log plot)',
x = '',
y = 'log(Number of Company Offices)'
) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
coord_flip() +
theme_bw()
# Load in Packages
library(dplyr)
library(ggplot2)
library(maps)
library(scales)
# Load in Data sets
airports <- read.csv("airports.csv")
companies1 <- read.csv("companies_1m.csv")
companies2 <- read.csv("companies_design.csv")
offices1 <- read.csv('offices.csv')
offices2 <- read.csv('offices5_score.csv')
topoffices <- read.csv('topoffices2_score.csv')
# grouping by country and seeing how many company offices are in each country
company_offices_per_country <- companies1 %>%
group_by(country_code) %>%
tally() %>%
# unique()
# Plotting countries on y axis for cleanliness
# comparing Log(number of offices) because comparing just normal offices makes the graph
# very unclear and has the US far above the rest, this graph shows perspective
ggplot(data = company_offices_per_country, aes(x = country_code, y = n)) +
geom_bar(
stat = 'identity',
fill = '#f68060',
) +
labs(
title = 'Number of Company Offices per Country (log plot)',
x = '',
y = 'log(Number of Company Offices)'
) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
coord_flip() +
theme_bw()
library(dplyr)
library(ggplot2)
library(maps)
library(scales)
airports <- read.csv("airports.csv")
companies1 <- read.csv("companies_1m.csv")
companies2 <- read.csv("companies_design.csv")
offices1 <- read.csv('offices.csv')
offices2 <- read.csv('offices5_score.csv')
topoffices <- read.csv('topoffices2_score.csv')
lat90 <- offices1 %>% filter(latitude > 45 & latitude <= 90)
View(lat90)
lat90 <- offices1 %>% filter(latitude > 45 & latitude <= 90)
lat45 <- offices1 %>% filter(latitude > 0 & latitude <= 45)
lat_neg_45 <- offices1 %>% filter(latitude > -45 & latitude <= 0)
lat_neg_90 <- offices1 %>% filter(latitude > -90 & latitude <= -45)
office_lat_data <- c(count(lat_neg_90), count(lat45), count(lat_neg_45), count(lat_neg_90))
office_lat_data <- c(count(lat_90), count(lat_45), count(lat_neg_45), count(lat_neg_90))
lat_90 <- offices1 %>% filter(latitude > 45 & latitude <= 90)
lat_45 <- offices1 %>% filter(latitude > 0 & latitude <= 45)
lat_neg_45 <- offices1 %>% filter(latitude > -45 & latitude <= 0)
lat_neg_90 <- offices1 %>% filter(latitude > -90 & latitude <= -45)
office_lat_data <- c(count(lat_90), count(lat_45), count(lat_neg_45), count(lat_neg_90))
pie(office_lat_data,
labels = c("90 to 45 degrees", "45 to 0 degrees", "0 to -45 degrees", "-45 to -90 degrees"),
title = "Number of Offices at Each Latitude Group"
)
View(lat_neg_90)
lat_90 <- offices1 %>% filter(latitude > 45 & latitude <= 90)
lat_45 <- offices1 %>% filter(latitude > 0 & latitude <= 45)
lat_neg_45 <- offices1 %>% filter(latitude > -45 & latitude <= 0)
lat_neg_90 <- offices1 %>% filter(latitude > -90 & latitude <= -45)
office_lat_data <- c(count(lat_90), count(lat_45), count(lat_neg_45))
pie(office_lat_data,
labels = c("90 to 45 degrees", "45 to 0 degrees", "0 to -45 degrees", "-45 to -90 degrees"),
title = "Number of Offices at Each Latitude Group"
)
count(lat_45)
count(lat_90)
count(lat_neg_45)
count(lat_neg_90)
lat_90 <- offices1 %>% filter(latitude > 45 & latitude <= 90)
lat_45 <- offices1 %>% filter(latitude > 0 & latitude <= 45)
lat_neg_45 <- offices1 %>% filter(latitude > -45 & latitude <= 0)
#lat_neg_90 <- offices1 %>% filter(latitude > -90 & latitude <= -45)
office_lat_data <- c(count(lat_90), count(lat_45), count(lat_neg_45))
pie(office_lat_data,
labels = c("90 to 45 degrees", "45 to 0 degrees", "0 to -45 degrees", "-45 to -90 degrees"),
title = "Number of Offices at Each Latitude Group"
)
lat_90 <- offices1 %>% filter(latitude > 45 & latitude <= 90)
lat_45 <- offices1 %>% filter(latitude > 0 & latitude <= 45)
lat_neg_45 <- offices1 %>% filter(latitude > -45 & latitude <= 0)
lat_neg_90 <- offices1 %>% filter(latitude > -90 & latitude <= -45)
office_lat_data <- c(nrow(lat_90), nrow(lat_45), nrow(lat_neg_45), nrow(lat_neg_90))
pie(office_lat_data,
labels = c("90 to 45 degrees", "45 to 0 degrees", "0 to -45 degrees", "-45 to -90 degrees"),
title = "Number of Offices at Each Latitude Group"
)
lat_90 <- offices1 %>% filter(latitude > 45 & latitude <= 90)
lat_45 <- offices1 %>% filter(latitude > 0 & latitude <= 45)
lat_neg_45 <- offices1 %>% filter(latitude > -45 & latitude <= 0)
lat_neg_90 <- offices1 %>% filter(latitude > -90 & latitude <= -45)
office_lat_data <- c(nrow(lat_90), nrow(lat_45), nrow(lat_neg_45), nrow(lat_neg_90))
pie(office_lat_data,
labels = c("90 to 45 degrees", "45 to 0 degrees", "0 to -45 degrees", "-45 to -90 degrees"),
col = palette("Set2")
)
office_lat_data <- c(nrow(lat_90), nrow(lat_45), nrow(lat_neg_45), nrow(lat_neg_90))
pie(office_lat_data,
labels = c("90 - 45", "45 - 0", "0 - -45 degrees", "-45 - -90"),
col = palette("Set2")
)
lat_90 <- offices1 %>% filter(latitude > 45 & latitude <= 90)
lat_45 <- offices1 %>% filter(latitude > 0 & latitude <= 45)
lat_neg_45 <- offices1 %>% filter(latitude > -45 & latitude <= 0)
lat_neg_90 <- offices1 %>% filter(latitude > -90 & latitude <= -45)
office_lat_data <- c(nrow(lat_90), nrow(lat_45), nrow(lat_neg_45), nrow(lat_neg_90))
pie(office_lat_data,
labels = c("90 - 45", "45 - 0", "0 - -45", "-45 - -90"),
col = palette("Set2")
)
office_lat_data <- c(nrow(lat_90), nrow(lat_45), nrow(lat_neg_45), nrow(lat_neg_90))
pie(office_lat_data,
labels = c("90 - 45", "45 - 0", "0 - -45", "-45 - -90"),
main = "Number of Offices at Each Latitude Group",
col = palette("Set2")
)
setwd("~/Desktop/Info-201/Git-repos/exploratory-analysis-VincentChenPK")
airports <- read.csv("data_set/airports.csv")
# Load in Packages
library(dplyr)
library(ggplot2)
library(maps)
library(scales)
# Load in Data set
airports <- read.csv("data_set/airports.csv")
companies1 <- read.csv("data_set/companies_1m.csv")
companies2 <- read.csv("data_set/companies_design.csv")
offices1 <- read.csv('data_set/offices.csv')
offices2 <- read.csv('data_set/offices5_score.csv')
topoffices <- read.csv('data_set/topoffices2_score.csv')
# grouping by country and seeing how many company offices are in each country
company_offices_per_country <- companies1 %>%
group_by(country_code) %>%
tally() %>%
unique()
# Plotting countries on y axis for cleanliness
# comparing Log(number of offices) because comparing just normal offices makes the graph
# very unclear and has the US far above the rest, this graph shows perspective
ggplot(data = company_offices_per_country, aes(x = country_code, y = n)) +
geom_bar(
stat = 'identity',
fill = '#f68060',
) +
labs(
title = 'Number of Company Offices per Country (log plot)',
x = '',
y = 'log(Number of Company Offices)'
) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
coord_flip() +
theme_bw()
# Load in Packages
library(dplyr)
library(ggplot2)
library(maps)
library(scales)
# Load in Data sets
airports <- read.csv("airports.csv")
# Load in Packages
library(dplyr)
library(ggplot2)
library(maps)
library(scales)
# Load in Data sets
airports <- read.csv("data_set/airports.csv")
setwd("~/Desktop/Info-201/Git-repos/exploratory-analysis-VincentChenPK")
# Load in Packages
library(dplyr)
library(ggplot2)
library(maps)
library(scales)
# Load in Data sets
airports <- read.csv("data_set/airports.csv")
companies1 <- read.csv("data_set/companies_1m.csv")
companies2 <- read.csv("data_set/companies_design.csv")
offices1 <- read.csv('data_set/offices.csv')
offices2 <- read.csv('data_set/offices5_score.csv')
topoffices <- read.csv('data_set/topoffices2_score.csv')
# grouping by country and seeing how many company offices are in each country
company_offices_per_country <- companies1 %>%
group_by(country_code) %>%
tally() %>%
unique()
# Plotting countries on y axis for cleanliness
# comparing Log(number of offices) because comparing just normal offices makes the graph
# very unclear and has the US far above the rest, this graph shows perspective
ggplot(data = company_offices_per_country, aes(x = country_code, y = n)) +
geom_bar(
stat = 'identity',
fill = '#f68060',
) +
labs(
title = 'Number of Company Offices per Country (log plot)',
x = '',
y = 'log(Number of Company Offices)'
) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
coord_flip() +
theme_bw()
